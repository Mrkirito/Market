<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hangjia.bxj.dao.MyCustomerDao">

	<!-- 简单记录，用于在列表中显示一些基础信息 -->
	<resultMap type="com.hangjia.bxj.model.Customer" id="SimpleCustomer">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="name" property="name"/>
		<result column="sex" property="sex"/>
		<result column="image_url" property="imageUrl"/>
		<result column="mobile" property="mobile"/>
	</resultMap>
	
	<!-- 详细记录，在详情页、编辑页中显示 -->
	<resultMap type="com.hangjia.bxj.model.Customer" id="CustomerDetails" extends="SimpleCustomer">
		<result column="email" property="email"/>
		<result column="address" property="address"/>
		<result column="remark" property="remark"/>
		<result column="birthday" property="birthday"/>
	</resultMap>
	
	<!-- 此结果中仅包含 id 和 imageUrl 字段，供更新头像使用 
	<resultMap type="com.hangjia.bxj.model.Customer" id="CustomerImage">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="image_url" property="imageUrl"/>
	</resultMap>
-->
	<select id="listMyCustomers" resultMap="SimpleCustomer" parameterType="java.lang.Integer">
		SELECT
			id,
			`name`,
			sex,
			image_url,
			mobile
		FROM
			customer
		WHERE
			user_id = #{userId, jdbcType=INTEGER}
			AND status = 0
	</select>
	
	<select id="getMyCustomerDetails" resultMap="CustomerDetails">
		SELECT
			id,
			`name`,
			sex,
			mobile,
			email,
			address,
			remark,
			birthday,
			image_url
		FROM
			customer
		WHERE
			id = #{1, jdbcType=BIGINT}
			AND user_id = #{0, jdbcType=INTEGER}
			AND `status` = 0
	</select>
	
	<select id="getCustomerImage" resultType="java.lang.String">
		SELECT
			image_url
		FROM
			customer
		WHERE
			id = #{0, jdbcType=BIGINT}
	</select>
  
  	<update id="updateCustomerImage">
  		UPDATE
			customer
		SET
			image_url = #{1, jdbcType=VARCHAR}
		WHERE
			id = #{0, jdbcType=BIGINT}
  	</update>
  	
  	<update id="deleteMyCustomer">
  		UPDATE
			customer
		SET
			status = 1
		WHERE
			id = #{1, jdbcType=BIGINT}
			AND user_id = #{0, jdbcType=INTEGER}
			AND `status` = 0
  	</update>
  	
  	<update id="updateMyCustomer" parameterType="com.hangjia.bxj.model.Customer">
  		UPDATE
  			customer
  		SET
  			`name` = #{name},
  			sex = #{sex, jdbcType=TINYINT},
  			mobile = #{mobile},
  			email = #{email},
  			address = #{address},
  			remark = #{remark},
  			birthday = #{birthday},
  			image_url = #{imageUrl}
  		WHERE
  			id = #{id}
			AND user_id = #{userId}
			AND `status` = 0
  	</update>
  	
  	<update id="updateMyCustomerWithoutImage" parameterType="com.hangjia.bxj.model.Customer">
  		UPDATE
  			customer
  		SET
  			`name` = #{name},
  			sex = #{sex, jdbcType=TINYINT},
  			mobile = #{mobile},
  			email = #{email},
  			address = #{address},
  			remark = #{remark},
  			birthday = #{birthday}
  		WHERE
  			id = #{id}
			AND user_id = #{userId}
			AND `status` = 0
  	</update>
  	
  	<!-- 查询我的客户的计划书。 -->
  	
  	<resultMap type="com.hangjia.bxj.model.CustomersPlanBook" id="CustomersPlanBook">
  		<id column="bid" property="id" jdbcType="INTEGER"/>
  		<result column="NAME" property="name" jdbcType="VARCHAR"/>
  		<result column="read_status" property="readStatus"/>
  		<result column="CTIME" property="createAt"/>
  		<result column="rid" property="relId"/>
  		<result column="customerId" property="customerId"/>
  		<result column="bid" property="bookId"/>
  	</resultMap>
  	
  	<select id="listMyCustomerPlanBooks" resultMap="CustomersPlanBook">
  	SELECT
		b.CTIME CTIME,
		b.`NAME` `name`,
		b.FID bid,
		r.read_status read_status,
		r.FID rid,
		r.customer_id as customerId
	FROM
		plan_book b
	JOIN
		customer_book_rel r
	ON
		b.FID = r.book_id
	JOIN
		customer c
	ON
		c.id = #{1} AND c.user_id = #{0} AND c.`status` = 0 AND b.user_id = c.user_id AND r.customer_id = c.id
  	</select>
  	
  	<!-- 删除我为客户制定的计划书
  		此sql仅删除关联表中的记录，通过关联表中的book_id字段找到对应的计划书，从计划书中比对user_id
  		来限制用户只能删除自己制定的计划书 -->
  	<update id="deleteMyCustomerBook">
  	DELETE FROM
		customer_book_rel
	WHERE
		FID = (SELECT a.FID FROM (SELECT r2.FID FROM customer_book_rel r2, plan_book b WHERE r2.FID = #{1, jdbcType=INTEGER} AND r2.book_id = b.FID AND b.user_id = #{0, jdbcType=INTEGER}) a)
  	</update>
  	<!-- 新增 客户 -->
  	<insert id="insertCustomer" parameterType="com.hangjia.bxj.model.Customer" useGeneratedKeys="true" keyProperty="id">
	    insert into customer
	    <trim prefix="(" suffix=")" suffixOverrides="," >
	      <if test="id != null" >
	        id,
	      </if>
	      <if test="userId != null" >
	        user_id,
	      </if>
	      <if test="name != null" >
	        name,
	      </if>
	      <if test="sex != null" >
	        sex,
	      </if>
	      <if test="idCardCode != null" >
	        idcard,
	      </if>
	      <if test="mobile != null" >
	        mobile,
	      </if>
	    </trim>
	    <trim prefix="values (" suffix=")" suffixOverrides="," >
	      <if test="id != null" >
	        #{id,jdbcType=BIGINT},
	      </if>
	      <if test="userId != null" >
	        #{userId,jdbcType=INTEGER},
	      </if>
	      <if test="name != null" >
	        #{name,jdbcType=VARCHAR},
	      </if>
	      <if test="sex != null" >
	        #{sex,jdbcType=TINYINT},
	      </if>
	      <if test="idCardCode != null" >
	        #{idCardCode,jdbcType=VARCHAR},
	      </if>
	      <if test="mobile != null" >
	        #{mobile,jdbcType=VARCHAR},
	      </if>
	    </trim>
  	</insert>
  	<insert id="insertCustomerBookRel" parameterType="com.hangjia.bxj.model.CustomersPlanBook" >
    	insert into customer_book_rel
	    <trim prefix="(" suffix=")" suffixOverrides="," >
	      <if test="customerId != null" >
	        customer_id,
	      </if>
	      <if test="bookId != null" >
	        book_id,
	      </if>
	    </trim>
	    <trim prefix="values (" suffix=")" suffixOverrides="," >
	      <if test="customerId != null" >
	        #{customerId,jdbcType=INTEGER},
	      </if>
	      <if test="bookId != null" >
	        #{bookId,jdbcType=INTEGER},
	      </if>
	    </trim>
	  </insert>
	  <select id="listMyCustomersByName" resultType="com.hangjia.bxj.model.Customer" parameterType="com.hangjia.bxj.model.PlanBook">
		SELECT id,name,mobile,sex,image_url as imageUrl FROM customer WHERE user_id = #{userId} AND name=#{author} AND `status` = 0
	</select>
	<update id="updateCustomersPlanBook" parameterType="com.hangjia.bxj.model.CustomersPlanBook" >
	    update customer_book_rel
	    <set>
	      <if test="readStatus != null" >
	        read_status = #{readStatus},
	      </if>
	    </set>
	    where customer_id = #{customerId} and book_id = #{bookId} and read_status=0 
	  </update>
	  
	 <select id="selectCustomerIdByIdCard" resultType="java.lang.Long">
		 SELECT
			id
		FROM
			customer
		WHERE
			user_id = #{0, jdbcType=INTEGER}
			AND idcard = #{1, jdbcType=VARCHAR}
	 </select>
	 <select id="getCustomersPlanBook" resultType="com.hangjia.bxj.model.CustomersPlanBook">
	 	SELECT a.read_status as readStatus,b.name FROM customer_book_rel a INNER JOIN customer b ON a.customer_id=b.id WHERE a.customer_id=#{0} AND a.book_id=#{1} limit 1;
	 </select>
</mapper>